{"attributes": {"fullName": "qx.Bootstrap", "packageName": "qx", "isStatic": true, "type": "bootstrap", "name": "Bootstrap"}, "type": "class", "children": [{"attributes": {"text": "<p>Internal class that is responsible for bootstrapping the qooxdoo\nframework at load time.</p>\n\n<p>Automatically loads JavaScript language fixes and enhancements to\nbring all engines to at least JavaScript 1.6.</p>\n\n<p>Does support:</p>\n\n<ul>\n<li>Statics</li>\n<li>Members</li>\n<li>Extend</li>\n<li>Defer</li>\n</ul>\n\n<p>Does not support:</p>\n\n<ul>\n<li>Super class calls</li>\n<li>Mixins, Interfaces, Properties, ...</li>\n</ul>"}, "type": "desc"}, {"type": "methods-static", "children": [{"attributes": {"isStatic": true, "name": "bind"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "func"}, "type": "param", "children": [{"attributes": {"text": "<p>Original function to wrap</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "name": "self"}, "type": "param", "children": [{"attributes": {"text": "<p>The object that the &#8220;this&#8221; of the function will refer to.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "name": "varargs"}, "type": "param", "children": [{"attributes": {"text": "<p>The arguments to pass to the function.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "arguments"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns a function whose &#8220;this&#8221; is altered.</p>\n\n<p><strong>Syntax</strong></p>\n\n<pre class=\"javascript\">qx.lang.Function.self(myFunction, [self, [varargs...]]);</pre>\n\n<p><strong>Example</strong></p>\n\n<pre class=\"javascript\">\nfunction myFunction()\n{\n  this.setStyle('color', 'red');\n  // note that 'this' here refers to myFunction, not an element\n  // we'll need to bind this function to the element we want to alter\n};\n\nvar myBoundFunction = qx.lang.Function.bind(myFunction, myElement);\nmyBoundFunction(); // this will make the element myElement red.\n</pre>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The bound function.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "classIsDefined"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>class name to check</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Whether the given class exists</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>true if class exists</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "debug"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "object"}, "type": "param", "children": [{"attributes": {"text": "<p>Contextual object (either instance or static class)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "message"}, "type": "param", "children": [{"attributes": {"text": "<p>Any number of arguments supported. An argument may\n  have any JavaScript data type. All data is serialized immediately and\n  does not keep references to other objects.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sending a message at level &#8220;debug&#8221; to the logger.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"access": "internal", "isInternal": true, "isStatic": true, "name": "define"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>Name of the class</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "null", "name": "config"}, "type": "param", "children": [{"attributes": {"text": "<p>Class definition structure.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Define a new class using the qooxdoo class system.\nLightweight version of {@link qx.Class#define} only used during bootstrap phase.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The defined class</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Class"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "error"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "object"}, "type": "param", "children": [{"attributes": {"text": "<p>Contextual object (either instance or static class)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "message"}, "type": "param", "children": [{"attributes": {"text": "<p>Any number of arguments supported. An argument may\n  have any JavaScript data type. All data is serialized immediately and\n  does not keep references to other objects.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sending a message at level &#8220;error&#8221; to the logger.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "extendClass"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "clazz"}, "type": "param", "children": [{"attributes": {"text": "<p>The class&#8217;s wrapped constructor</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "construct"}, "type": "param", "children": [{"attributes": {"text": "<p>The unwrapped constructor</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "superClass"}, "type": "param", "children": [{"attributes": {"text": "<p>The super class</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>fully qualified class name</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}, {"attributes": {"name": "basename"}, "type": "param", "children": [{"attributes": {"text": "<p>the base name</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Function"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Inherit a clazz from a super class.</p>\n\n<p>This function differentiates between class and constructor because the\nconstructor written by the user might be wrapped and the <code>base</code>\nproperty has to be attached to the constructor, while the <code>superclass</code>\nproperty has to be attached to the wrapped constructor.</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "firstLow"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "str"}, "type": "param", "children": [{"attributes": {"text": "<p>the string</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Convert the first character of the string to lower case.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the string with a lower case first character</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "firstUp"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "str"}, "type": "param", "children": [{"attributes": {"text": "<p>the string</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Convert the first character of the string to upper case.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the string with a upper case first character</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"access": "internal", "isInternal": true, "isStatic": true, "name": "genericToString"}, "type": "method", "children": [{"attributes": {"text": "<p>This method will be attached to all classes to return\na nice identifier for them.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>The class identifier</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "getByInterface"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "clazz"}, "type": "param", "children": [{"attributes": {"text": "<p>class to look for the interface</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Class"}, "type": "entry"}]}]}, {"attributes": {"name": "iface"}, "type": "param", "children": [{"attributes": {"text": "<p>interface to look for</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Interface"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the class or one of its super classes which contains the\ndeclaration of the given interface. Returns null if the interface is not\nspecified anywhere.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the class which directly implements the given interface</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Class"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "getByName"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>class name to resolve</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Find a class by its name</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the class</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Class"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "getClass"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>value to get the class for</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the internal class of the value. See\n<a href=\"http://thinkweb2.com/projects/prototype/instanceof-considered-harmful-or-how-to-write-a-robust-isarray/\">http://thinkweb2.com/projects/prototype/instanceof-considered-harmful-or-how-to-write-a-robust-isarray/</a>\nfor details.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>the internal class of the value</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "getEventType"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "clazz"}, "type": "param", "children": [{"attributes": {"text": "<p>class to check</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Class"}, "type": "entry"}]}]}, {"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>name of the event</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the event type of the given event. Returns null if\nthe event does not exist.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Event type of the given event.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "getKeys"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "map"}, "type": "param", "children": [{"attributes": {"text": "<p>the map</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the keys of a map as array as returned by a &#8220;for&#8230; in&#8221; statement.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>array of the keys of the map</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "getKeysAsString"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "map"}, "type": "param", "children": [{"attributes": {"text": "<p>the map</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the keys of a map as string</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>String of the keys of the map\n        The keys are separated by &#8221;, &#8221;</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "getMixins"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "clazz"}, "type": "param", "children": [{"attributes": {"text": "<p>class which should be inspected</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Class"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns a list of all mixins available in a given class.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>array of mixins this class uses</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Mixin", "dimensions": 1}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "getPropertyDefinition"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "clazz"}, "type": "param", "children": [{"attributes": {"text": "<p>class to check</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Class"}, "type": "entry"}]}]}, {"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>name of the event to check for</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Returns the definition of the given property. Returns null\nif the property does not exist.</p>\n\n<p><span class=\"caps\">TODO</span>: Correctly support refined properties?</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>whether the object support the given event.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Map"}, "type": "entry"}, {"attributes": {"type": "null"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "hasInterface"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "clazz"}, "type": "param", "children": [{"attributes": {"text": "<p>class to check</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Class"}, "type": "entry"}]}]}, {"attributes": {"name": "iface"}, "type": "param", "children": [{"attributes": {"text": "<p>the interface to check for</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Interface"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Whether a given class or any of its super classes includes a given interface.</p>\n\n<p>This function will return &#8220;true&#8221; if the interface was defined\nin the class declaration</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>whether the class includes the interface.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "hasProperty"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "clazz"}, "type": "param", "children": [{"attributes": {"text": "<p>class to check</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Class"}, "type": "entry"}]}]}, {"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>name of the property to check for</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Whether a class has the given property</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>whether the class includes the given property.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "info"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "object"}, "type": "param", "children": [{"attributes": {"text": "<p>Contextual object (either instance or static class)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "message"}, "type": "param", "children": [{"attributes": {"text": "<p>Any number of arguments supported. An argument may\n  have any JavaScript data type. All data is serialized immediately and\n  does not keep references to other objects.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sending a message at level &#8220;info&#8221; to the logger.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "isArray"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to check.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Whether the value is an array.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Whether the value is an array.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "isFunction"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to check.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Whether the value is a function.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Whether the value is a function.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "isObject"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to check.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Whether the value is an object. Note that built-in types like Window are\nnot reported to be objects.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Whether the value is an object.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "isString"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Value to check.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Whether the value is a string.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Whether the value is a string.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "objectGetLength"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "map"}, "type": "param", "children": [{"attributes": {"text": "<p>the map</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Get the number of objects in the map</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>number of objects in the map</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Integer"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "objectMergeWith"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "target"}, "type": "param", "children": [{"attributes": {"text": "<p>target object</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "source"}, "type": "param", "children": [{"attributes": {"text": "<p>object to be merged</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"defaultValue": "true", "name": "overwrite"}, "type": "param", "children": [{"attributes": {"text": "<p>If enabled existing keys will be overwritten</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Inserts all keys of the source object into the\ntarget objects. Attention: The target map gets modified.</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>Target with merged values from the source object</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "setDisplayNames"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "functionMap"}, "type": "param", "children": [{"attributes": {"text": "<p>a map with functions as values</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "classname"}, "type": "param", "children": [{"attributes": {"text": "<p>the name of the class, the functions are\n  defined in</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Set the names of all functions defined in the given map</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "supportsEvent"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "clazz"}, "type": "param", "children": [{"attributes": {"text": "<p>class to check</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Class"}, "type": "entry"}]}]}, {"attributes": {"name": "name"}, "type": "param", "children": [{"attributes": {"text": "<p>name of the event to check for</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "String"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Whether a class supports the given event type</p>"}, "type": "desc"}, {"type": "return", "children": [{"attributes": {"text": "<p>whether the class supports the given event.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"isStatic": true, "name": "trace"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "object"}, "type": "param", "children": [{"attributes": {"text": "<p>Contextual object (either instance or static class)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Prints the current stack trace at level &#8220;info&#8221;</p>"}, "type": "desc"}]}, {"attributes": {"isStatic": true, "name": "warn"}, "type": "method", "children": [{"type": "params", "children": [{"attributes": {"name": "object"}, "type": "param", "children": [{"attributes": {"text": "<p>Contextual object (either instance or static class)</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "Object"}, "type": "entry"}]}]}, {"attributes": {"name": "message"}, "type": "param", "children": [{"attributes": {"text": "<p>Any number of arguments supported. An argument may\n  have any JavaScript data type. All data is serialized immediately and\n  does not keep references to other objects.</p>"}, "type": "desc"}, {"type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sending a message at level &#8220;warn&#8221; to the logger.</p>"}, "type": "desc"}, {"type": "return", "children": [{"type": "types", "children": [{"attributes": {"type": "void"}, "type": "entry"}]}]}]}]}, {"type": "constants", "children": [{"attributes": {"name": "LOADSTART"}, "type": "constant", "children": [{"attributes": {"text": "<p>Timestamp of qooxdoo based application startup</p>"}, "type": "desc"}]}]}]}